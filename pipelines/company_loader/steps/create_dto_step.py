from pipelines.company_loader.context import CompanyDTO
from pipelines.generic_pipeline import Context, NextStep
from src.company.enums import SystemStatus
from src.core.language_translator.google_translator import (
    translate_large_text, translate_text)
from src.core.language_translator.ml_traslator import LangTranslator


class CreateCompanyDTOStep:
    def __init__(self, translator: LangTranslator):
        self.translator = translator

    def __call__(self, context: Context, next_step: NextStep) -> None:
        dto = CompanyDTO(
            system_status=SystemStatus.AUTOGENERATED,
            country_code='RU',
            name=context.raw_company.name,
            en_name=context.raw_company.en_name or translate_text(context.raw_company.name),
            legal_name=context.raw_company.legal_name,
            en_legal_name=translate_text(context.raw_company.legal_name),
            legal_address=context.raw_company.legal_address,
            en_legal_address=self.translator(context.raw_company.legal_address),
            inn=context.raw_company.inn,
            ogrn=context.raw_company.ogrn,
            kpp=context.raw_company.kpp,
            okpo=context.raw_company.okpo,

            okveds=context.raw_company.okved,

            okogu_code=context.raw_company.okogu_code,
            okopf_code=context.raw_company.okopf_code,
            okfs_code=context.raw_company.okfs_code,
            okato_code=context.raw_company.okato_code,
            oktmo_code=context.raw_company.oktmo_code,
            code_kladr=context.raw_company.code_kladr,
        )
        context.company_dto = dto

        next_step(context)
