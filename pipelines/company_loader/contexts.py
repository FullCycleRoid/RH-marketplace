from dataclasses import dataclass, field
from datetime import datetime
from typing import List, Optional

from pipelines.company_loader.raw_model import RawCompany
from src.company.dto import Contact, Address, Manager, FinancialReport, TaxReport, Translations
from src.company.enums import LegalStatus, SystemStatus
from src.company.models import Company


@dataclass
class CompanyDTO:
    name: str
    inn: str
    registration_date: Optional[datetime] = None
    liquidation_date: Optional[datetime] = None

    country_code: str = 'RU'
    legal_status: LegalStatus = LegalStatus.UNKNOWN
    system_status: SystemStatus = SystemStatus.AUTOGENERATED

    legal_name: Optional[str] = None
    legal_address: Optional[str] = None
    ogrn: Optional[str] = None
    kpp: Optional[str] = None
    okpo: Optional[str] = None
    legal_form: Optional[str] = None
    authorized_capital: Optional[int] = None
    average_number_of_employees: Optional[int] = None

    okogu_code: Optional[str] = None
    okopf_code: Optional[str] = None
    okfs_code: Optional[str] = None
    okato_code: Optional[str] = None
    oktmo_code: Optional[str] = None
    code_kladr: Optional[str] = None

    contacts: List[Contact] = field(default_factory=list)
    addresses: List[Address] = field(default_factory=list)
    management: List[Manager] = field(default_factory=list)

    financial_reports: List[FinancialReport] = field(default_factory=list)
    tax_reports: List[TaxReport] = field(default_factory=list)

    translations: List[Translations] = field(default_factory=list)


@dataclass
class CompanyContext:
    raw_company: Optional[RawCompany] = None
    company_dto: Optional[CompanyDTO] = None
    company_model: Optional[Company] = None

    failed_records = 0
