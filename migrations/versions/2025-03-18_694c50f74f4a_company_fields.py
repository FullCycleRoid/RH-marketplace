"""company_fields

Revision ID: 694c50f74f4a
Revises: 913608bb34b8
Create Date: 2025-03-18 22:35:25.807694

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '694c50f74f4a'
down_revision = '913608bb34b8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('catalog_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('en_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['catalog_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_field_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('ru_name', sa.String(length=50), nullable=False),
    sa.Column('en_name', sa.String(length=50), nullable=False),
    sa.Column('ru_description', sa.Text(), nullable=True),
    sa.Column('en_description', sa.Text(), nullable=True),
    sa.Column('data_type', sa.Enum('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='data_type'), nullable=False),
    sa.Column('field_type', sa.Enum('LEGAL_FIELD', 'SYSTEM_FIELD', 'USER_FIELD', name='field_type'), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('en_name'),
    sa.UniqueConstraint('ru_name'),
    sa.UniqueConstraint('ru_name', name='uq_company_field_type')
    )
    op.create_table('catalog_mktu_links',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('mktu_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['catalog_categories.id'], ),
    sa.ForeignKeyConstraint(['mktu_id'], ['MKTU_classifier.id'], ),
    sa.PrimaryKeyConstraint('category_id', 'mktu_id')
    )
    op.create_table('catalog_okved_links',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('okved_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['catalog_categories.id'], ),
    sa.ForeignKeyConstraint(['okved_id'], ['okved_nodes.id'], ),
    sa.PrimaryKeyConstraint('category_id', 'okved_id')
    )
    op.create_table('company_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('company_field_type_id', sa.UUID(), nullable=False),
    sa.Column('ru_data', sa.Text(), nullable=True),
    sa.Column('en_data', sa.Text(), nullable=True),
    sa.Column('json_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('translation_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['company_field_type_id'], ['company_field_type.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('legal_fields')
    op.drop_table('custom_fields')
    op.add_column('validation_rules', sa.Column('company_field_type_id', sa.UUID(), nullable=False))
    op.create_foreign_key(None, 'validation_rules', 'company_field_type', ['company_field_type_id'], ['id'])
    op.drop_column('validation_rules', 'field_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('validation_rules', sa.Column('field_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'validation_rules', type_='foreignkey')
    op.drop_column('validation_rules', 'company_field_type_id')
    op.create_table('custom_fields',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_translatable', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('translation_type', postgresql.ENUM('manual', 'automatic', name='translation_type'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='custom_fields_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='custom_fields_pkey')
    )
    op.create_table('legal_fields',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_translatable', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('translation_type', postgresql.ENUM('manual', 'automatic', name='translation_type'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='legal_fields_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='legal_fields_pkey')
    )
    op.drop_table('company_fields')
    op.drop_table('catalog_okved_links')
    op.drop_table('catalog_mktu_links')
    op.drop_table('company_field_type')
    op.drop_table('catalog_categories')
    # ### end Alembic commands ###
