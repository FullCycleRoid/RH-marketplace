"""new_company_structure

Revision ID: 2800e0e5fc6d
Revises: 15a3abeff08b
Create Date: 2025-03-24 22:38:02.860751

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2800e0e5fc6d'
down_revision = '15a3abeff08b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_translations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('language_code', sa.String(length=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('legal_description', sa.Text(), nullable=True),
    sa.Column('advantages', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_id', 'language_code', name='uq_company_lang')
    )
    op.create_index('idx_company_translation_desc', 'company_translations', ['description'], unique=False)
    op.create_table('field_type_translations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('field_type_id', sa.UUID(), nullable=False),
    sa.Column('language_code', sa.String(length=2), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['field_type_id'], ['company_field_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('field_type_id', 'language_code', name='uq_field_type_lang')
    )
    op.create_index('idx_ft_translation_name', 'field_type_translations', ['name'], unique=False)
    op.create_table('field_translations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('field_id', sa.UUID(), nullable=False),
    sa.Column('language_code', sa.String(length=2), nullable=False),
    sa.Column('data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['company_fields.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('field_id', 'language_code', name='uq_field_lang')
    )
    op.create_index('idx_field_translation_data', 'field_translations', ['data'], unique=False)
    op.create_table('manager_translations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=False),
    sa.Column('language_code', sa.String(length=2), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['managers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('manager_id', 'language_code', name='uq_manager_lang')
    )
    op.create_index('idx_manager_translation_name', 'manager_translations', ['full_name'], unique=False)
    op.alter_column('companies', 'legal_status',
               existing_type=postgresql.ENUM('ACTIVE', 'LIQUIDATED', 'BANKRUPTCY', 'EXCLUDED_FROM_REGISTER', 'SUSPENDED', 'UNKNOWN', 'ON_MODERATION', name='legal_status'),
               server_default=None,
               existing_nullable=False)
    op.alter_column('companies', 'system_status',
               existing_type=postgresql.ENUM('OWNER_CONTROLLED', 'AUTOGENERATED', name='system_status'),
               server_default=None,
               existing_nullable=False)
    op.drop_index('idx_company_country_code', table_name='companies')
    op.create_index('idx_company_country_system', 'companies', ['country_code', 'system_status'], unique=False)
    op.create_index('idx_company_legal_status', 'companies', ['legal_status'], unique=False)
    op.create_index('idx_company_system_status', 'companies', ['system_status'], unique=False)
    op.alter_column('company_change_log', 'entity_type',
               existing_type=postgresql.ENUM('COMPANY', 'LEGAL_FIELD', 'SYSTEM_FIELD', 'CUSTOM_FIELD', 'CONTACT', 'FINANCIAL_REPORT', 'TAX_REPORT', 'TRANSLATION', name='entity_type'),
               server_default=None,
               existing_nullable=False)
    op.create_index('idx_change_log_company_timestamp', 'company_change_log', ['company_id', 'timestamp'], unique=False)
    op.alter_column('company_field_type', 'data_type',
               existing_type=postgresql.ENUM('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='data_type'),
               server_default=None,
               existing_nullable=False)
    op.alter_column('company_field_type', 'field_type',
               existing_type=postgresql.ENUM('LEGAL_FIELD', 'SYSTEM_FIELD', 'USER_FIELD', name='field_type'),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('company_field_type_en_name_key', 'company_field_type', type_='unique')
    op.drop_constraint('uq_company_field_type', 'company_field_type', type_='unique')
    op.create_index('idx_field_type_country', 'company_field_type', ['country_code'], unique=False)
    op.drop_column('company_field_type', 'ru_description')
    op.drop_column('company_field_type', 'en_description')
    op.drop_column('company_field_type', 'ru_name')
    op.drop_column('company_field_type', 'en_name')
    op.create_index('idx_company_field_company_type', 'company_fields', ['company_id', 'company_field_type_id'], unique=False)
    op.drop_column('company_fields', 'en_data')
    op.drop_column('company_fields', 'ru_data')
    op.alter_column('contacts', 'type',
               existing_type=postgresql.ENUM('EMAIL', 'PHONE', 'WEBSITE', 'SOCIAL', name='contact_type'),
               server_default=None,
               existing_nullable=False)
    op.create_index('idx_contact_company_type', 'contacts', ['company_id', 'type'], unique=False)
    op.create_index('idx_financial_report_company_year', 'financial_reports', ['company_id', 'year'], unique=False)
    op.alter_column('managers', 'position',
               existing_type=postgresql.ENUM('DIRECTOR', 'CEO', 'FOUNDER', 'SALES MANAGER', 'PURCHASE MANAGER', 'LOGIST', 'ACCOUNTANT', 'MANAGER', name='manager_type'),
               server_default=None,
               existing_nullable=False)
    op.create_index('idx_manager_inn', 'managers', ['inn'], unique=False)
    op.create_index('idx_manager_position', 'managers', ['position'], unique=False)
    op.drop_column('managers', 'en_full_name')
    op.drop_column('managers', 'full_name')
    op.create_index('idx_tax_report_company_year', 'tax_reports', ['company_id', 'year'], unique=False)
    op.alter_column('validation_rules', 'validation_type',
               existing_type=postgresql.ENUM('REGEX', 'LENGTH', 'RANGE', 'CUSTOM', name='validation_type'),
               server_default=None,
               existing_nullable=False)
    op.create_index('idx_validation_rule_field_type', 'validation_rules', ['company_field_type_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_validation_rule_field_type', table_name='validation_rules')
    op.alter_column('validation_rules', 'validation_type',
               existing_type=postgresql.ENUM('REGEX', 'LENGTH', 'RANGE', 'CUSTOM', name='validation_type'),
               server_default=sa.text("'CUSTOM'::validation_type"),
               existing_nullable=False)
    op.drop_index('idx_tax_report_company_year', table_name='tax_reports')
    op.add_column('managers', sa.Column('full_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('managers', sa.Column('en_full_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index('idx_manager_position', table_name='managers')
    op.drop_index('idx_manager_inn', table_name='managers')
    op.alter_column('managers', 'position',
               existing_type=postgresql.ENUM('DIRECTOR', 'CEO', 'FOUNDER', 'SALES MANAGER', 'PURCHASE MANAGER', 'LOGIST', 'ACCOUNTANT', 'MANAGER', name='manager_type'),
               server_default=sa.text("'MANAGER'::manager_type"),
               existing_nullable=False)
    op.drop_index('idx_financial_report_company_year', table_name='financial_reports')
    op.drop_index('idx_contact_company_type', table_name='contacts')
    op.alter_column('contacts', 'type',
               existing_type=postgresql.ENUM('EMAIL', 'PHONE', 'WEBSITE', 'SOCIAL', name='contact_type'),
               server_default=sa.text("'EMAIL'::contact_type"),
               existing_nullable=False)
    op.add_column('company_fields', sa.Column('ru_data', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('company_fields', sa.Column('en_data', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index('idx_company_field_company_type', table_name='company_fields')
    op.add_column('company_field_type', sa.Column('en_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('company_field_type', sa.Column('ru_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('company_field_type', sa.Column('en_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('company_field_type', sa.Column('ru_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index('idx_field_type_country', table_name='company_field_type')
    op.create_unique_constraint('uq_company_field_type', 'company_field_type', ['ru_name'])
    op.create_unique_constraint('company_field_type_en_name_key', 'company_field_type', ['en_name'])
    op.alter_column('company_field_type', 'field_type',
               existing_type=postgresql.ENUM('LEGAL_FIELD', 'SYSTEM_FIELD', 'USER_FIELD', name='field_type'),
               server_default=sa.text("'SYSTEM_FIELD'::field_type"),
               existing_nullable=False)
    op.alter_column('company_field_type', 'data_type',
               existing_type=postgresql.ENUM('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='data_type'),
               server_default=sa.text("'STRING'::data_type"),
               existing_nullable=False)
    op.drop_index('idx_change_log_company_timestamp', table_name='company_change_log')
    op.alter_column('company_change_log', 'entity_type',
               existing_type=postgresql.ENUM('COMPANY', 'LEGAL_FIELD', 'SYSTEM_FIELD', 'CUSTOM_FIELD', 'CONTACT', 'FINANCIAL_REPORT', 'TAX_REPORT', 'TRANSLATION', name='entity_type'),
               server_default=sa.text("'COMPANY'::entity_type"),
               existing_nullable=False)
    op.drop_index('idx_company_system_status', table_name='companies')
    op.drop_index('idx_company_legal_status', table_name='companies')
    op.drop_index('idx_company_country_system', table_name='companies')
    op.create_index('idx_company_country_code', 'companies', ['country_code'], unique=False)
    op.alter_column('companies', 'system_status',
               existing_type=postgresql.ENUM('OWNER_CONTROLLED', 'AUTOGENERATED', name='system_status'),
               server_default=sa.text("'AUTOGENERATED'::system_status"),
               existing_nullable=False)
    op.alter_column('companies', 'legal_status',
               existing_type=postgresql.ENUM('ACTIVE', 'LIQUIDATED', 'BANKRUPTCY', 'EXCLUDED_FROM_REGISTER', 'SUSPENDED', 'UNKNOWN', 'ON_MODERATION', name='legal_status'),
               server_default=sa.text("'UNKNOWN'::legal_status"),
               existing_nullable=False)
    op.drop_index('idx_manager_translation_name', table_name='manager_translations')
    op.drop_table('manager_translations')
    op.drop_index('idx_field_translation_data', table_name='field_translations')
    op.drop_table('field_translations')
    op.drop_index('idx_ft_translation_name', table_name='field_type_translations')
    op.drop_table('field_type_translations')
    op.drop_index('idx_company_translation_desc', table_name='company_translations')
    op.drop_table('company_translations')
    # ### end Alembic commands ###
