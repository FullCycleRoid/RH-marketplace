"""company_migrations

Revision ID: 74b35df3208c
Revises: 
Create Date: 2025-03-01 13:35:32.297624

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '74b35df3208c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('legal_status', sa.Enum('ACTIVE', 'LIQUIDATED', 'SUSPENDED', 'UNKNOWN', 'ON_MODERATION', name='legal_status'), nullable=False),
    sa.Column('system_status', sa.Enum('OWNER_CONTROLLED', 'AUTOGENERATED', name='system_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_company_country_code', 'companies', ['country_code'], unique=False)
    op.create_index('idx_legal_status', 'companies', ['legal_status'], unique=False)
    op.create_table('country_legal_requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('active_from', sa.DateTime(timezone=True), nullable=False),
    sa.Column('active_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVATE', 'ARCHIVED', name='field_status'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country_code', 'version', name='uq_country_version')
    )
    op.create_index('idx_country_legal_req_country', 'country_legal_requirements', ['country_code'], unique=False)
    op.create_index('idx_country_legal_req_status', 'country_legal_requirements', ['status'], unique=False)
    op.create_table('refresh_token',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('translations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.Enum('COMPANY', 'LEGAL_FIELD', 'SYSTEM_FIELD', 'CUSTOM_FIELD', 'CONTACT', 'FINANCIAL_REPORT', 'TAX_REPORT', 'TRANSLATION', name='entitytype'), nullable=False),
    sa.Column('field_name', sa.String(length=255), nullable=False),
    sa.Column('language_code', sa.String(length=2), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_id', 'entity_type', 'field_name', 'language_code', name='uq_translation')
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_name'), 'user_role', ['name'], unique=True)
    op.create_table('contacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('EMAIL', 'PHONE', 'WEBSITE', 'SOCIAL', name='contact_type'), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custom_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.Enum('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='field_type'), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_translatable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dialogues',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_a_id', sa.UUID(), nullable=True),
    sa.Column('company_b_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['company_a_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['company_b_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('legal_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.Enum('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='field_type'), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=False),
    sa.Column('is_translatable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('required_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requirement_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.Enum('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='field_type'), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['requirement_id'], ['country_legal_requirements.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('requirement_id', 'name', name='uq_required_field')
    )
    op.create_index('idx_required_field_req_id', 'required_fields', ['requirement_id'], unique=False)
    op.create_table('system_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.Enum('STRING', 'NUMBER', 'DATE', 'BOOLEAN', 'ARRAY', 'OBJECT', name='field_type'), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_translatable', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tax_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'VERIFIED', 'REJECTED', name='report_status'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('provider', sa.Enum('EMAIL', 'GOOGLE', 'YANDEX', 'VK', name='authprovider'), nullable=False),
    sa.Column('provider_user_id', sa.String(length=255), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('active_state', sa.Enum('ACTIVE', 'BAN', 'INACTIVE', 'WAIT_FOR_VERIFICATION', name='activestate'), nullable=False),
    sa.Column('creation_method', sa.Enum('AUTOGENERATED', 'REGISTERED', name='creationmethod'), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('company_change_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.Enum('COMPANY', 'LEGAL_FIELD', 'SYSTEM_FIELD', 'CUSTOM_FIELD', 'CONTACT', 'FINANCIAL_REPORT', 'TAX_REPORT', 'TRANSLATION', name='entity_type'), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('changes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financial_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('annual_income', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('net_profit', sa.DECIMAL(precision=20, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'VERIFIED', 'REJECTED', name='report_status'), nullable=False),
    sa.Column('audited_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['audited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('dialogue_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['dialogue_id'], ['dialogues.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('validation_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('field_id', sa.UUID(), nullable=False),
    sa.Column('validation_type', sa.Enum('REGEX', 'LENGTH', 'RANGE', 'CUSTOM', name='validation_type'), nullable=False),
    sa.Column('params', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('error_code', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['required_fields.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('validation_rules')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_table('financial_reports')
    op.drop_table('company_change_log')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('tax_reports')
    op.drop_table('system_fields')
    op.drop_index('idx_required_field_req_id', table_name='required_fields')
    op.drop_table('required_fields')
    op.drop_table('legal_fields')
    op.drop_table('dialogues')
    op.drop_table('custom_fields')
    op.drop_table('contacts')
    op.drop_index(op.f('ix_user_role_name'), table_name='user_role')
    op.drop_table('user_role')
    op.drop_table('translations')
    op.drop_table('refresh_token')
    op.drop_index('idx_country_legal_req_status', table_name='country_legal_requirements')
    op.drop_index('idx_country_legal_req_country', table_name='country_legal_requirements')
    op.drop_table('country_legal_requirements')
    op.drop_index('idx_legal_status', table_name='companies')
    op.drop_index('idx_company_country_code', table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
