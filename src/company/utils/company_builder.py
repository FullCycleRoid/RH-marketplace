from datetime import datetime
from uuid import uuid4

from sqlalchemy.orm import Session

from src.company.enums import (
    ContactType,
    FieldType,
    LegalStatus,
    ManagerType,
    SystemStatus,
)
from src.company.infrastructure.models import Company, Manager


class CompanyBuilder:
    def __init__(self, session: Session):
        self.session = session
        self.company = Company(
            id=uuid4(),
            country_code="RU",
            legal_status=LegalStatus.ACTIVE,
            system_status=SystemStatus.AUTOGENERATED,
            created_at=datetime.now(),
            updated_at=datetime.now(),
        )

    def set_legal_fields(
        self, legal_name, legal_address, inn, kpp, ogrn, registration_date
    ):
        self.company.add_legal_field(
            "legal_name", legal_name, FieldType.STRING, required=True
        )
        self.company.add_legal_field(
            "legal_address", legal_address, FieldType.STRING, required=True
        )
        self.company.add_legal_field("inn", inn, FieldType.STRING, required=True)
        self.company.add_legal_field("kpp", kpp, FieldType.STRING, required=True)
        self.company.add_legal_field("ogrn", ogrn, FieldType.STRING, required=True)
        self.company.add_legal_field(
            "registration_date",
            registration_date.isoformat(),
            FieldType.DATE,
            required=True,
        )
        return self

    def set_contacts(self, contacts):
        for contact in contacts:
            self.company.add_contact(contact.type, contact.value)
        return self

    def set_managers(self, managers):
        for manager in managers:
            self.company.managers.append(
                Manager(
                    id=uuid4(),
                    company_id=self.company.id,
                    position=manager.position,
                    full_name=manager.full_name,
                    en_full_name=manager.en_full_name,
                    since_on_position=manager.since_on_position,
                )
            )
        return self

    def set_financial_reports(self, financial_reports):
        for report in financial_reports:
            self.company.add_financial_report(
                year=report.year,
                annual_income=report.annual_income,
                net_profit=report.net_profit,
                currency=report.currency,
            )
        return self

    def set_tax_reports(self, tax_reports):
        for report in tax_reports:
            self.company.add_tax_report(
                year=report.year,
                taxes_paid=report.taxes_paid,
                paid_insurance=report.paid_insurance,
            )
        return self

    def build(self):
        self.session.add(self.company)
        self.session.commit()
        return self.company


# Пример использования
data = {
    "legal_name": 'ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ "ПРИМФ-МЕБЕЛЬ"',
    "legal_address": "692751, Приморский край, г. о. Артемовский, г. Артем, ул. Кирова, д. 189",
    "inn": "2502033846",
    "kpp": "250201001",
    "ogrn": "1072502001439",
    "registration_date": datetime.date(2007, 4, 11),
    "contacts": [
        Contact(type=ContactType.WEBSITE, value="primf.com"),
        Contact(type=ContactType.PHONE, value="+74233798484"),
        Contact(type=ContactType.PHONE, value="+74233748099"),
        Contact(type=ContactType.PHONE, value="+74233733733"),
        Contact(type=ContactType.EMAIL, value="info@primf.com"),
        Contact(type=ContactType.EMAIL, value="info@prim.com"),
        Contact(type=ContactType.EMAIL, value="torg2@primf.com"),
    ],
    "managers": [
        Manager(
            position=ManagerType.CEO,
            full_name="Таратенко Дмитрий Александрович",
            en_full_name="Taratenko Dmitri Alexandrovich",
            since_on_position=datetime.date(2019, 5, 15),
        )
    ],
    "financial_reports": [
        FinancialReport(
            year="2023", annual_income=90100000, net_profit=8199999, currency="RUB"
        )
    ],
    "tax_reports": [TaxReport(year="2023", taxes_paid=2600000, paid_insurance=1800000)],
}

session = Session()
builder = CompanyBuilder(session)
company = (
    builder.set_legal_fields(
        data["legal_name"],
        data["legal_address"],
        data["inn"],
        data["kpp"],
        data["ogrn"],
        data["registration_date"],
    )
    .set_contacts(data["contacts"])
    .set_managers(data["managers"])
    .set_financial_reports(data["financial_reports"])
    .set_tax_reports(data["tax_reports"])
    .build()
)
